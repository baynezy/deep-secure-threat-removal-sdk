name: CI/CD

env:
  VERSION_NUMBER: 2.0.0
  NUGET_KEY: ${{ secrets.NUGET_API_KEY }}

on:
  push:
    branches:
      - master
      - develop
      - feature/*
      - release/*
      - hotfix/*
  pull_request:
    branches: [develop]
  workflow_dispatch:

jobs:

  open-source-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Analyse with FOSSA
        uses: fossa-contrib/fossa-action@v1
        with:
          fossa-api-key: ecbc9c822e743eac0304c1cafcd2136e

  static-analysis:
    runs-on: windows-latest

    steps:
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Set up JDK
        uses: actions/setup-java@v3.4.0
        with:
          distribution: 'zulu'
          java-version: 15.0
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v2.1.7
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v2.1.7
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"baynezy_deep-secure-threat-removal-sdk" /o:"baynezy" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build --configuration Release
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Test
        run: dotnet test ./test/DeepSecure.ThreatRemoval.Test/DeepSecure.ThreatRemoval.Test.csproj --no-restore --verbosity normal --logger "junit;LogFileName=results.xml"
      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          files: "**/TestResults/*.xml"

  publish:
    runs-on: ubuntu-latest
    needs: [static-analysis,build-and-test,open-source-scan]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 6.0.x
      - name: Output Version Number
        run: echo "Version-$VERSION_NUMBER.$GITHUB_RUN_NUMBER"
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Package
        run: dotnet pack ./src/DeepSecure.ThreatRemoval/DeepSecure.ThreatRemoval.csproj -c Release /P:PackageVersion=$VERSION_NUMBER.$GITHUB_RUN_NUMBER
      - name: Publish
        run: nuget push ./src/DeepSecure.ThreatRemoval/bin/Release/DeepSecure.ThreatRemoval.$VERSION_NUMBER.$GITHUB_RUN_NUMBER.nupkg -ApiKey $NUGET_KEY -NonInteractive -Source https://www.nuget.org/api/v2/package
